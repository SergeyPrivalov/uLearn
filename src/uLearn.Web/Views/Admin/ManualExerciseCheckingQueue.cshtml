@using Database.Models
@using RestSharp.Extensions
@using uLearn.Web.Extensions
@using Ulearn.Common
@using Ulearn.Common.Extensions

@model uLearn.Web.Controllers.ManualCheckingQueueViewModel

@{
	ViewBag.Title = "Очередь на код-ревью";
}

<div class="container">
	<h1>Код-ревью</h1>

	@if (Model.ShowFilterForm)
	{
		@Html.Partial("_ManualCheckingQueueFilterForm", Model)
	}

	@if (!string.IsNullOrEmpty(Model.Message) && Model.Checkings.Count > 0)
	{
		<div class="alert alert-danger">
			@if (Model.Message == "already_checked")
			{
				<p>Эта работа уже проверена, выберите другую</p>
			}
			@if (Model.Message == "locked")
			{
				<p>Эта работа проверяется другим инструктором, выберите другую</p>
			}
			@if (Model.Message == "slide_checked")
			{
				<p>Для этого задания больше нет непроверенных работ</p>
			}
			@if (Model.Message == "time_is_over")
			{
				<p>Время проверки вышло. Выберите другую работу</p>
			}
            @if (Model.Message == "checking_removed")
            {
	            <p>Студент отправил новое решение по&nbsp;этой задаче. Старое больше недоступно для&nbsp;код-ревью</p>
            }
		</div>
	}

	@if (Model.Checkings.Count == 0)
	{
		if (Model.AlreadyChecked)
		{
			<hr/>
			<div class="text-muted">Здесь будут проверенные преподавателями программы студентов</div>
		}
		else
		{
			<hr />
			<div class="text-muted">Здесь будут появляться программы студентов, которые должны быть проверены преподавателем вручную.</div>
			<div><b>Поздравляем, очередь пуста! Работ для проверки нет.</b></div>
		}
	}

	@foreach (var checkModel in Model.Checkings)
	{
		var checking = (ManualExerciseChecking)checkModel.CheckingQueueItem;
		<hr/>
		<div>
			<div>
				<p>
					<b>@checking.User.VisibleName</b> решил@(checking.User.Gender.ChooseEnding()) задание «@checkModel.ContextSlideTitle.MakeNestedQuotes()»
					<span title="@checkModel.ContextTimestamp.ToPrettyString()">@checkModel.ContextTimestamp.ToAgoPrettyString()</span>
				</p>
			</div>
			<div>
				@if (Model.AlreadyChecked)
				{
					<p>
						Последний раз проверялась преподавателем <b>@checking.LockedBy.VisibleName</b>
						<span class="label label-xs label-default">
							@checking.Score из @checkModel.ContextMaxScore.PluralizeInRussian(RussianPluralizationOptions.Score) за код-ревью
						</span>
					</p>
					<p>
						@if (checkModel.ContextReviews.Any())
						{
							foreach (var review in checkModel.ContextReviews)
							{
								var solution = checkModel.ContextExerciseSolution;
								var startPosition = solution.FindPositionByLineAndCharacted(review.StartLine, review.StartPosition);
								var finishPosition = solution.FindPositionByLineAndCharacted(review.FinishLine, review.FinishPosition);
								<div>
									<span class="commented-code">@solution.Substring(startPosition, finishPosition - startPosition).TruncateWithEllipsis(30)</span>
									@Html.Raw(review.Comment.HtmlEncode().RenderSimpleMarkdown())
								</div>
							}
						}
					</p>
					<p>
						@Html.ActionLink("Посмотреть", "CheckExercise", new { Model.CourseId, checking.Id, Group = Model.SelectedGroupsIdsJoined, recheck = true }, new { @class = "btn btn-sm btn-info" })
					</p>
				}
				else if (checking.IsLocked)
				{
					<p>
						Проверяется преподавателем <b>@checking.LockedBy.VisibleName</b>,
						заблокирована ещё на&nbsp;@{
							                     var minutes = (int)(checking.LockedUntil.Value - DateTime.Now).TotalMinutes;
							                     @minutes.PluralizeInRussian(RussianPluralizationOptions.MinuteDative)
						                     }
					</p>
					if (checking.IsLockedBy(User.Identity))
					{
						@Html.ActionLink("Вернуться к проверке →", "CheckExercise", new { Model.CourseId, checking.Id, Group = Model.SelectedGroupsIdsJoined }, new { @class = "btn btn-sm btn-primary" })
					}
					else
					{
						@Html.ActionLink("Все равно проверить →", "CheckExercise", new { Model.CourseId, checking.Id, Group = Model.SelectedGroupsIdsJoined }, new { @class = "btn btn-sm btn-primary" })
					}
				}
				else
				{
					@Html.ActionLink("Перейти к проверке →", "CheckExercise", new { Model.CourseId, checking.Id, Group = Model.SelectedGroupsIdsJoined }, new { @class = "btn btn-sm btn-success" })
				}
			</div>
		</div>
	}

	@if (Model.ExistsMore)
	{
		<div class="alert alert-info">Показаны последние 500 работ</div>
	}
</div>
